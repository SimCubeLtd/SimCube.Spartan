<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimCube.Spartan</name>
    </assembly>
    <members>
        <member name="T:SimCube.Spartan.Attributes.MediatedRequestAttribute">
            <summary>
            Attribute for registration of a request as a Endpoint.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Attributes.MediatedRequestAttribute.#ctor(SimCube.Spartan.Enums.RequestType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SimCube.Spartan.Attributes.MediatedRequestAttribute"/> class.
            </summary>
            <param name="method">The mediated request method.</param>
            <param name="route">The route to register the endpoint on.</param>
        </member>
        <member name="P:SimCube.Spartan.Attributes.MediatedRequestAttribute.Method">
            <summary>
            Gets the type of the http request.
            </summary>
        </member>
        <member name="P:SimCube.Spartan.Attributes.MediatedRequestAttribute.Route">
            <summary>
            Gets the route of the endpoint.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Enums.RequestType">
            <summary>
            Enum for the different types of request methods.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedGet">
            <summary>
            The GET request type.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedPost">
            <summary>
            The POST request type.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedPut">
            <summary>
            The PUT request type.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedPatch">
            <summary>
            The PATCH request type.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedDelete">
            <summary>
            The DELETE request type.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Extensions.MediatedExtensions">
            <summary>
            The extensions for Mediation request mapping.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedExtensions.MediatedGet``1(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})">
            <summary>
            Map Mediated Get requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedExtensions.MediatedPost``1(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})">
            <summary>
            Map Mediated Post requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedExtensions.MediatedPut``1(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})">
            <summary>
            Map Mediated Put requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedExtensions.MediatedPatch``1(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})">
            <summary>
            Map Mediated Patch requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedExtensions.MediatedDelete``1(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})">
            <summary>
            Map Mediated Delete requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="T:SimCube.Spartan.Interfaces.IMediatedRequest">
            <summary>
            Interface for the Mediated Http Requests.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Requests.BaseMediatedRequest">
            <summary>
            Base request for all mediated requests.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Requests.BaseMediatedRequest.ConfigureEndpoint">
            <summary>
            Optionally Configures the Endpoint of the request.
            </summary>
            <returns>The route builder configuration action.</returns>
        </member>
        <member name="T:SimCube.Spartan.Startup">
            <summary>
            Startup extensions for Spartan.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Startup.AddSpartanInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MediatR.MediatRServiceConfiguration},System.Type[])">
            <summary>
            Adds the spartan services to the application.
            </summary>
            <param name="services">The service collection instance.</param>
            <param name="mediatorScope">The scope to use when registering handlers in Mediatr.</param>
            <param name="handlerAssemblyMarkerTypes">The custom assemblies to register (Executing assembly is always included).</param>
            <returns>The populated service collection.</returns>
        </member>
        <member name="M:SimCube.Spartan.Startup.AddFluentValidationForRequests(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.Func{FluentValidation.AssemblyScanner.AssemblyScanResult,System.Boolean})">
            <summary>
            Adds the validation services.
            </summary>
            <param name="services">The service collection instance.</param>
            <param name="assemblies">The assemblies to register.</param>
            <param name="lifetime">The lifetime to register as, defaults to transient.</param>
            <param name="filter">The assembly scanner filter.</param>
            <returns>The populated service collection with validators registered.</returns>
        </member>
        <member name="M:SimCube.Spartan.Startup.AddMediatedEndpointsFromAttributes(Microsoft.AspNetCore.Builder.WebApplication,System.Type[])">
            <summary>
            Adds the mediated endpoints defined by attributes.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="handlerAssemblyMarkerTypes">The assemblies to look for attributes in.</param>
            <returns>The populated web application instance.</returns>
        </member>
        <member name="T:SimCube.Spartan.Validation.ValidationBehavior`2">
            <summary>
            Validation rules for mediated requests.
            </summary>
            <typeparam name="TRequest">The type of the request.</typeparam>
            <typeparam name="TResponse">The response type.</typeparam>
        </member>
        <member name="M:SimCube.Spartan.Validation.ValidationBehavior`2.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.IValidator{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:SimCube.Spartan.Validation.ValidationBehavior`2"/> class.
            </summary>
            <param name="validators">The validators to use to validate against.</param>
        </member>
        <member name="M:SimCube.Spartan.Validation.ValidationBehavior`2.Handle(`0,System.Threading.CancellationToken,MediatR.RequestHandlerDelegate{`1})">
            <summary>
            Performs the validation.
            </summary>
            <param name="request">The request to validate.</param>
            <param name="ct">The cancellation token.</param>
            <param name="next">The next middleware in the request pipeline.</param>
            <returns>The result of the validation, or the result of the next result in the pipeline if validation is successful.</returns>
        </member>
    </members>
</doc>
