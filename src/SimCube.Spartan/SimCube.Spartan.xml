<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimCube.Spartan</name>
    </assembly>
    <members>
        <member name="T:SimCube.Spartan.Attributes.CachePolicyAttribute">
            <summary>
            Attribute for Cache Output Policy Setup on an Endpoint.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Attributes.CachePolicyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SimCube.Spartan.Attributes.CachePolicyAttribute"/> class.
            </summary>
            <param name="policyName">The Policy Name.</param>
        </member>
        <member name="P:SimCube.Spartan.Attributes.CachePolicyAttribute.PolicyName">
            <summary>
            Gets the type of the http request.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Attributes.MediatedEndpointAttribute">
            <summary>
            Attribute for registration of an Endpoint.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Attributes.MediatedEndpointAttribute.#ctor(SimCube.Spartan.Enums.RequestType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SimCube.Spartan.Attributes.MediatedEndpointAttribute"/> class.
            </summary>
            <param name="method">The mediated request method.</param>
            <param name="route">The route to register the endpoint on.</param>
            <param name="isGrouped">Specifies if the endpoint should be mapped on the app, or within a group.</param>
        </member>
        <member name="P:SimCube.Spartan.Attributes.MediatedEndpointAttribute.IsGrouped">
            <summary>
            Gets a value indicating whether the endpoint is grouped.
            </summary>
        </member>
        <member name="P:SimCube.Spartan.Attributes.MediatedEndpointAttribute.Method">
            <summary>
            Gets the type of the http request.
            </summary>
        </member>
        <member name="P:SimCube.Spartan.Attributes.MediatedEndpointAttribute.Route">
            <summary>
            Gets the route of the endpoint.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Attributes.RateLimitPolicyAttribute">
            <summary>
            Attribute for Rate Limiting Policy setup on an Endpoint.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Attributes.RateLimitPolicyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SimCube.Spartan.Attributes.RateLimitPolicyAttribute"/> class.
            </summary>
            <param name="policyName">The Policy Name.</param>
        </member>
        <member name="P:SimCube.Spartan.Attributes.RateLimitPolicyAttribute.PolicyName">
            <summary>
            Gets the type of the http request.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Enums.ImplementedType">
            <summary>
            The type of the implemented interface.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.ImplementedType.Unknown">
            <summary>
            The type is unknown.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.ImplementedType.Request">
            <summary>
            The type is a request.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.ImplementedType.Stream">
            <summary>
            The type is a stream.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Enums.RequestType">
            <summary>
            Enum for the different types of request methods.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedGet">
            <summary>
            The GET request type.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedPost">
            <summary>
            The POST request type.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedPut">
            <summary>
            The PUT request type.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedPatch">
            <summary>
            The PATCH request type.
            </summary>
        </member>
        <member name="F:SimCube.Spartan.Enums.RequestType.MediatedDelete">
            <summary>
            The DELETE request type.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Extensions.AttributeExtensions">
            <summary>
            Extensions for Attributes used in Service Startup.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Extensions.AttributeExtensions.SetupMediatedRequestEndpointAttributes(System.Attribute[],System.Type,Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Sets up mediated attribute endpoints if the attribute is of type <see cref="T:SimCube.Spartan.Attributes.MediatedEndpointAttribute"/>.
            </summary>
            <param name="attributes">The attributes to handle.</param>
            <param name="request">The type to handle.</param>
            <param name="app">The WebApplication instance.</param>
        </member>
        <member name="T:SimCube.Spartan.Extensions.MediatedRequestExtensions">
            <summary>
            The extensions for Mediation request mapping.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedGet``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Get requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedGet``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Get requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The optional result type.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPost``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Post requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The optional result type.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPost``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Post requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPut``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Put requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPut``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Put requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The optional result type.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPatch``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Get requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPatch``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Patch requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The optional result type.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedDelete``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Delete requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The optional result type.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedDelete``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Delete requests to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedGetStream``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Get streams to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPostStream``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Post streams to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPutStream``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Put streams to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedPatchStream``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Patch streams to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="M:SimCube.Spartan.Extensions.MediatedRequestExtensions.MediatedDeleteStream``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Http.IEndpointFilter},System.String,System.String)">
            <summary>
            Map Mediated Delete streams to the specified controller action.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="route">the route to map the request on.</param>
            <param name="configureEndpoint">The optional route handler configuration action for endpoint extension.</param>
            <param name="endpointFilters">The optional Endpoint filters to chain to the request pipeline.</param>
            <param name="namedCachePolicy">The optional named Output Cache Policy to use.</param>
            <param name="namedRateLimitPolicy">The optional named Rate Limit Policy to use.</param>
            <typeparam name="TRequest">The type of the request to map with its parameters.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <returns>A type of <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.</returns>
        </member>
        <member name="T:SimCube.Spartan.Extensions.ReflectionExtensions">
            <summary>
            Common extension methods for Reflection.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Extensions.ReflectionExtensions.InheritsFrom(System.Type,System.Type)">
            <summary>
            Checks if a type inherits from another.
            </summary>
            <param name="t1">The type to check.</param>
            <param name="t2">The type to check against.</param>
            <returns>True if it is assignable, false if not.</returns>
        </member>
        <member name="T:SimCube.Spartan.Extensions.RouteHandlerBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder"/>.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Extensions.RouteHandlerBuilderExtensions.WithEndpointFilters(Microsoft.AspNetCore.Builder.IEndpointConventionBuilder,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IEndpointFilter})">
            <summary>
            Chain the endpoint filters onto the route handler.
            </summary>
            <param name="builder">The route handler instance.</param>
            <param name="filters">The filters to chain.</param>
            <returns>The endpoint with chained filters.</returns>
        </member>
        <member name="T:SimCube.Spartan.Interfaces.IMediatedRequest">
            <summary>
            Interface for the Mediated Http Requests.
            </summary>
        </member>
        <member name="T:SimCube.Spartan.Interfaces.IMediatedRequest`1">
            <summary>
            Interface for the Mediated Http Requests.
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="T:SimCube.Spartan.Interfaces.IMediatedStream`1">
            <summary>
            Interface for the Mediated Stream Requests.
            </summary>
            <typeparam name="TResult">The result type for Streamed Results.</typeparam>
        </member>
        <member name="T:SimCube.Spartan.Requests.BaseMediatedRequest">
            <summary>
            Base request for all mediated requests.
            </summary>
        </member>
        <member name="P:SimCube.Spartan.Requests.BaseMediatedRequest.EndpointFilters">
            <summary>
            Gets the optional filters collection for endpoint middleware chaining via filters.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Requests.BaseMediatedRequest.ConfigureEndpoint">
            <summary>
            Optionally Configures the Endpoint of the request.
            </summary>
            <returns>The route builder configuration action.</returns>
        </member>
        <member name="T:SimCube.Spartan.Requests.BaseMediatedRequest`1">
            <summary>
            Base request for all mediated requests.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="P:SimCube.Spartan.Requests.BaseMediatedRequest`1.EndpointFilters">
            <summary>
            Gets the optional filters collection for endpoint middleware chaining via filters.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Requests.BaseMediatedRequest`1.ConfigureEndpoint">
            <summary>
            Optionally Configures the Endpoint of the request.
            </summary>
            <returns>The route builder configuration action.</returns>
        </member>
        <member name="T:SimCube.Spartan.Requests.BaseMediatedStream`1">
            <summary>
            Represents a base mediated stream.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="P:SimCube.Spartan.Requests.BaseMediatedStream`1.EndpointFilters">
            <summary>
            Gets the optional filters collection for endpoint middleware chaining via filters.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Requests.BaseMediatedStream`1.ConfigureEndpoint">
            <summary>
            Optionally Configures the Endpoint of the request.
            </summary>
            <returns>The route builder configuration action.</returns>
        </member>
        <member name="T:SimCube.Spartan.Startup">
            <summary>
            Startup extensions for Spartan.
            </summary>
        </member>
        <member name="M:SimCube.Spartan.Startup.AddSpartanInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MediatR.MediatRServiceConfiguration},System.Type[])">
            <summary>
            Adds the spartan services to the application.
            </summary>
            <param name="services">The service collection instance.</param>
            <param name="mediatorScope">The scope to use when registering handlers in Mediatr.</param>
            <param name="handlerAssemblyMarkerTypes">The custom assemblies to register (Executing assembly is always included).</param>
            <returns>The populated service collection.</returns>
        </member>
        <member name="M:SimCube.Spartan.Startup.AddSpartanInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MediatR.MediatRServiceConfiguration},System.Boolean,System.Type[])">
            <summary>
            Adds the spartan services to the application.
            </summary>
            <param name="services">The service collection instance.</param>
            <param name="mediatorScope">The scope to use when registering handlers in Mediatr.</param>
            <param name="addFluentValidation">Should add fluent validation validators into the mediator pipeline?.</param>
            <param name="handlerAssemblyMarkerTypes">The custom assemblies to register (Executing assembly is always included).</param>
            <returns>The populated service collection.</returns>
        </member>
        <member name="M:SimCube.Spartan.Startup.AddFluentValidationForRequests(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.Func{FluentValidation.AssemblyScanner.AssemblyScanResult,System.Boolean})">
            <summary>
            Adds the validation services.
            </summary>
            <param name="services">The service collection instance.</param>
            <param name="assemblies">The assemblies to register.</param>
            <param name="lifetime">The lifetime to register as, defaults to transient.</param>
            <param name="filter">The assembly scanner filter.</param>
            <returns>The populated service collection with validators registered.</returns>
        </member>
        <member name="M:SimCube.Spartan.Startup.AddMediatedEndpointsFromAttributes(Microsoft.AspNetCore.Builder.WebApplication,System.Type[])">
            <summary>
            Adds the mediated endpoints defined by attributes.
            </summary>
            <param name="app">The web application instance.</param>
            <param name="handlerAssemblyMarkerTypes">The assemblies to look for attributes in.</param>
            <returns>The populated web application instance.</returns>
        </member>
        <member name="M:SimCube.Spartan.Startup.AddMediatedEndpointsToGroup(Microsoft.AspNetCore.Routing.RouteGroupBuilder,System.Type[])">
            <summary>
            Adds the mediated endpoints to a group.
            </summary>
            <param name="group">The group to map onto.</param>
            <param name="groupRequests">The mediated requests to map as group children.</param>
            <returns>The populated group builder instance.</returns>
        </member>
        <member name="T:SimCube.Spartan.Validation.ValidationBehavior`2">
            <summary>
            Validation rules for mediated requests.
            </summary>
            <typeparam name="TRequest">The type of the request.</typeparam>
            <typeparam name="TResponse">The response type.</typeparam>
        </member>
        <member name="M:SimCube.Spartan.Validation.ValidationBehavior`2.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.IValidator{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:SimCube.Spartan.Validation.ValidationBehavior`2"/> class.
            </summary>
            <param name="validators">The validators to use to validate against.</param>
        </member>
        <member name="M:SimCube.Spartan.Validation.ValidationBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)">
            <summary>
            Performs the validation.
            </summary>
            <param name="request">The request to validate.</param>
            <param name="next">The next middleware in the request pipeline.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result of the validation, or the result of the next result in the pipeline if validation is successful.</returns>
        </member>
    </members>
</doc>
